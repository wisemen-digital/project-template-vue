// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zSetUserRolesCommand = z.object({
    roleUuids: z.array(z.string().uuid())
});

export const zViewUserResponse = z.object({
    uuid: z.string().uuid(),
    email: z.string().email(),
    firstName: z.unknown(),
    lastName: z.unknown()
});

export const zPaginatedOffsetQuery = z.object({
    limit: z.number().gte(1).lte(100),
    offset: z.number().gte(0)
});

export const zUsersFilterQuery = z.object({
    permissions: z.array(z.enum([
        'admin',
        'read_only',
        'user.read',
        'user.create',
        'user.update',
        'user.delete',
        'role.read',
        'role.create',
        'role.update',
        'role.delete',
        'contact.create',
        'contact.read',
        'contact.update',
        'contact.delete'
    ])).optional()
});

export const zUserIndexView = z.object({
    uuid: z.string().uuid(),
    email: z.string().email(),
    firstName: z.unknown(),
    lastName: z.unknown()
});

export const zPaginatedOffsetResponseMeta = z.object({
    total: z.number(),
    offset: z.number(),
    limit: z.number()
});

export const zViewUsersResponse = z.object({
    items: z.array(zUserIndexView),
    meta: zPaginatedOffsetResponseMeta
});

export const zRoleTransformerType = z.object({
    uuid: z.string().uuid(),
    createdAt: z.string().datetime(),
    updatedAt: z.string().datetime(),
    name: z.string(),
    permissions: z.array(z.enum([
        'admin',
        'read_only',
        'user.read',
        'user.create',
        'user.update',
        'user.delete',
        'role.read',
        'role.create',
        'role.update',
        'role.delete',
        'contact.create',
        'contact.read',
        'contact.update',
        'contact.delete'
    ]))
});

export const zCreateRoleDto = z.object({
    name: z.string()
});

export const zPermissionObject = z.object({
    id: z.string(),
    actions: z.array(z.string())
});

export const zRoleValueDto = z.object({
    uuid: z.string(),
    name: z.string(),
    permissions: z.array(zPermissionObject)
});

export const zUpdateRolesBulkDto = z.object({
    roles: z.array(zRoleValueDto)
});

export const zRoleCount = z.object({
    count: z.number()
});

export const zCreateFileDto = z.object({
    name: z.string(),
    mimeType: z.enum([
        'application/pdf',
        'application/msword',
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        'application/vnd.ms-powerpoint',
        'application/vnd.openxmlformats-officedocument.presentationml.presentation',
        'text/plain',
        'text/html',
        'text/html',
        'image/jpeg',
        'image/jpeg',
        'image/jpeg',
        'image/png',
        'image/tiff',
        'image/tiff',
        'image/bmp',
        'image/heic',
        'image/webp',
        'image/gif'
    ])
});

export const zCreateFileResponse = z.object({
    uuid: z.string().uuid(),
    name: z.string(),
    mimeType: z.enum([
        'application/pdf',
        'application/msword',
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        'application/vnd.ms-powerpoint',
        'application/vnd.openxmlformats-officedocument.presentationml.presentation',
        'text/plain',
        'text/html',
        'text/html',
        'image/jpeg',
        'image/jpeg',
        'image/jpeg',
        'image/png',
        'image/tiff',
        'image/tiff',
        'image/bmp',
        'image/heic',
        'image/webp',
        'image/gif'
    ]),
    uploadUrl: z.string()
});

export const zCreateContactCommand = z.object({
    firstName: z.unknown(),
    lastName: z.unknown(),
    email: z.unknown(),
    phone: z.unknown()
});

export const zCreateContactResponse = z.object({
    uuid: z.string().uuid(),
    createdAt: z.string().datetime(),
    updatedAt: z.string().datetime(),
    isActive: z.boolean(),
    firstName: z.unknown(),
    lastName: z.unknown(),
    email: z.unknown(),
    phone: z.unknown()
});

export const zUpdateContactCommand = z.object({
    firstName: z.unknown(),
    lastName: z.unknown(),
    email: z.unknown(),
    phone: z.unknown(),
    isActive: z.boolean()
});

export const zViewContactDetailResponse = z.object({
    uuid: z.string().uuid(),
    createdAt: z.string().datetime(),
    updatedAt: z.string().datetime(),
    isActive: z.boolean(),
    firstName: z.unknown(),
    lastName: z.unknown(),
    email: z.unknown(),
    phone: z.unknown()
});

export const zViewContactIndexFilterQuery = z.object({
    isActive: z.string().optional()
});

export const zContactResponse = z.object({
    uuid: z.string().uuid(),
    createdAt: z.string().datetime(),
    updatedAt: z.string().datetime(),
    isActive: z.boolean(),
    firstName: z.unknown(),
    lastName: z.unknown(),
    email: z.unknown(),
    phone: z.unknown()
});

export const zViewContactIndexResponse = z.object({
    items: z.array(zContactResponse),
    meta: zPaginatedOffsetResponseMeta
});